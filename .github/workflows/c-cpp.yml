name: 编译xfrpc
on:
  workflow_dispatch:
    inputs:
      tag:
        description: ''
        required: false
        default: ''
  
env:
  branch: "${{ github.event.inputs.branch }}"
  tag: "${{ github.event.inputs.tag }}"
  rel: "${{ github.event.inputs.rel }}"
  TZ: Asia/Shanghai
permissions:
  contents: write
  actions: write
jobs:
  build:
    name: Build ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: mips64el-linux-musln32
            os: ubuntu-latest
            URL: mips64el-linux-musln32-cross
            ARCH_FLAG: linux-mips64-n32
          - target: mips64el-linux-musln32sf
            os: ubuntu-latest
            URL: mips64el-linux-musln32sf-cross
            ARCH_FLAG: linux-mips64-n32

    runs-on: ${{ matrix.os }}
    steps:
     - name: Checkout code
       uses: actions/checkout@v4
       with:
        repository: liudf0716/xfrpc
        ref: ${{ env.branch }}
     - name: 下载linux-musl-gcc
       uses: lmq8267/dl-musl@main
       with:
        target: ${{ matrix.URL }}
        static: true
        gccpath: /tmp
     - name: 编译
       run: |
         rm -rf thirdparty/openssl-1.1.1m
         git clone --recurse-submodules https://github.com/openssl/openssl.git -b openssl-3.4.0 thirdparty/openssl-1.1.1m
         sed -i 's|"linux-mips32"|${CMAKE_ARCH_FLAG}|g' thirdparty/CMakeLists.txt
         sed -i 's|mips|YES|g' thirdparty/CMakeLists.txt
         sed -i 's|--static|no-shared|g' thirdparty/CMakeLists.txt
         sed -i 's|DOPENSSL_LIBRARES|DOPENSSL_LIBRARIES|g' thirdparty/CMakeLists.txt
         sed -i 's|dl pthread|dl pthread json-c atomic ${PROJECT_SOURCE_DIR}/thirdparty/libs/libz.a ${PROJECT_SOURCE_DIR}/thirdparty/libs/libcrypto.a|g' CMakeLists.txt
         sed -i '/${PROJECT_SOURCE_DIR}\/thirdparty\/include\/libevent/i ${PROJECT_SOURCE_DIR}/thirdparty/zlib-1.2.13/' CMakeLists.txt
         mkdir -p bin && cd bin
         cmake -DTHIRDPARTY_STATIC_BUILD=YES -DCMAKE_ARCH_FLAG="${{ matrix.ARCH_FLAG }}" -DCROSS_C_COMPILER=$CC ..
         make
         $STRIP xfrpc
         file xfrpc
     - name: 压缩
       run: |
        cd bin
        mv xfrpc xfrpc-${{ matrix.target }}
        
     - uses: actions/upload-artifact@v4
       with:
        name: xfrpc-${{ env.branch }}-${{ matrix.target }}
        path: bin/*
     - name: 打包
       if: github.event.inputs.rel == 'true'
       shell: bash
       run: |
          echo "build_time=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          if [ -z "$TAG" ]; then
              echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          fi
          echo "haxi=$(git rev-parse HEAD)" >> $GITHUB_ENV
       env:
        TAG: ${{ env.tag }}
        TARGET: ${{ matrix.target }}
     - name: 发布Release
       if: github.event.inputs.rel == 'true'
       uses: softprops/action-gh-release@v2
       with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
           > ### 编译时间 ：${{ env.build_time }} [提交记录](https://github.com/liudf0716/xfrpc/tree/${{ env.haxi }})
           
           [官方源码](https://github.com/liudf0716/xfrpc)
           
          tag_name: ${{env.tag}}
          files: |
            bin/xfrpc-${{ matrix.target }}
